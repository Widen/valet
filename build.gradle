import org.apache.tools.ant.taskdefs.Jar

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'maven'

group = 'widen'
version = '0.2-SNAPSHOT'

sourceCompatibility = 1.5
targetCompatibility = 1.5

repositories {
	mavenCentral()
}

uploadArchives {
	repositories.mavenDeployer {
		repository(url: 'https://widen.artifactoryonline.com/widen/libs-widen-public') {
			authentication(userName: USER, password: PASSWORD)
		}
	}
}

dependencies {
	testCompile group: 'junit', name: 'junit', version: '4.8.2'

	compile group: 'dnsjava', name: 'dnsjava', version: '2.1.1'

	compile group: 'com.thoughtworks.xstream', name: 'xstream', version: '1.3.1'

	compile group: 'dom4j', name: 'dom4j', version: '1.6.1'

	compile group: 'com.mycila.xmltool', name: 'xmltool', version: '3.2'
	
	compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.1.1'

	compile group: 'commons-lang', name: 'commons-lang', version: '2.5'

	compile group: 'commons-io', name: 'commons-io', version: '2.0.1'

	compile group: 'org.slf4j', name: 'slf4j-api', version: '1.6.1'

	runtime group: 'org.slf4j', name: 'jcl-over-slf4j', version: '1.6.1'

	runtime group: 'ch.qos.logback', name: 'logback-core', version: '0.9.27'

	compile group: 'ch.qos.logback', name: 'logback-classic', version: '0.9.27'
}

task sourcesJar(type: Jar) {
	from sourceSets.main.allSource
	classifier = 'sources'
}

artifacts {
	archives sourcesJar
}

task checkAwsKeys(description: 'Verify AWS keys are set.') << {
	if (!hasProperty('aws-access-key') || !hasProperty('aws-secret-key'))
	{
		throw new InvalidUserDataException('You must run this task with the command line options -Paws-access-key=AMZ_ACCESS_KEY and -Paws-secret-key=AMZ_SECRET_KEY')
	}
}

task zoneSummary(descrption: 'Print a summary of all hosted zones for the given AWS account', dependsOn: [ checkAwsKeys, classes, testClasses ]) << {
	javaexec { spec ->
		main = 'com.widen.examples.ZoneSummary'
		args = [ getProperty('aws-access-key'), getProperty('aws-secret-key') ]
		classpath = sourceSets.test.runtimeClasspath
	}
}

eclipseClasspath {
  containers = [ 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.6' ]
}

tasks.eclipse.dependsOn = [ cleanEclipseClasspath, eclipseClasspath ]

tasks.idea.dependsOn = [ cleanIdeaModule, ideaModule ]